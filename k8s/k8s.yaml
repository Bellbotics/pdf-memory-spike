# k8s/k8s.yaml
# Purpose: One file to create everything needed for local dev:
# - Namespace
# - Deployment (Spring app + FastAPI sidecar in the same Pod)
# - Service to expose the Spring app internally (port-forward externally)
#
# Use:
#   kubectl apply -f k8s/k8s.yaml
#   kubectl -n pdf-ml port-forward svc/bds 8033:8033

apiVersion: v1
kind: Namespace
metadata:
  name: pdf-ml  # isolated workspace for this app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bds
  namespace: pdf-ml
spec:
  replicas: 1  # scale up later after shadow-mode validation
  selector:
    matchLabels: { app: bds }
  template:
    metadata:
      labels: { app: bds }
    spec:
      # Two containers share the SAME network namespace.
      # 127.0.0.1 in one container can reach the other.
      containers:
        # --- Spring Boot app (Java) ---
        - name: bds-app
          image: localhost:5001/bds-app:dev
          imagePullPolicy: Always
          ports:
            - containerPort: 8033
              name: http
          env:
            - name: TRIAGE_BASE_URL
              value: http://127.0.0.1:8000
            - name: MEMSPIKE_THRESHOLD_MB
              value: "3500"
            - name: MANAGEMENT_SERVER_PORT
              value: "8033"
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: http }
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: http }
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests: { cpu: "200m", memory: "512Mi" }
            limits: { cpu: "500m", memory: "1Gi" }

        - name: mem-spike-scorer
          image: localhost:5001/mem-spike-scorer:dev
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: memscore
          livenessProbe:
            httpGet: { path: /health, port: memscore }
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /health, port: memscore }
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests: { cpu: "50m", memory: "128Mi" }
            limits: { cpu: "250m", memory: "256Mi" }

---
apiVersion: v1
kind: Service
metadata:
  name: bds
  namespace: pdf-ml
spec:
  # Selects Pods with this label set by Deployment template
  selector: { app: bds }
  ports:
    - name: http
      port: 8033        # cluster-internal port
      targetPort: http  # maps to containerPort:8033 in the Pod
